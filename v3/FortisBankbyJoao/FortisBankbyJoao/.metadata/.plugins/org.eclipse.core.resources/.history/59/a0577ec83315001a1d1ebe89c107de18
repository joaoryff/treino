package data;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import bus.*;

public class CreditDB {
	
public static Credit Display() throws SQLException{
		   
		
	    Connection conn = ConnectionDB.ConnDB();
	    Credit cre = new Credit();
		String sqlQuery;
		System.out.println("\nCredit list...\n");
	    sqlQuery = "select * from credit";
	    Statement myStatement = null;
	    ResultSet myResultSet = null;
	    myStatement = conn.createStatement();
	    myResultSet = myStatement.executeQuery(sqlQuery);
	    
	    while(myResultSet.next())
	    {
	    
	    	cre.setCr_number(myResultSet.getInt(1));
	    	cre.setT_number(myResultSet.getInt(2));
	    	cre.setCr_limite(myResultSet.getFloat(3));
	    	cre.setCr_balance(myResultSet.getFloat(4));
	    	System.out.println("\nCredit Number:" + cre.getCr_number() 
	     			+ " Transaction Number:" + cre.getT_number()+ " Limite:" + 
	    			cre.getCr_limite()+"Balance"+cre.getCr_balance());
	    }
	    
	    conn.close();
	   return cre;
	   
	}

public static void Add(Credit credit) throws SQLException{
	
	Connection conn = ConnectionDB.ConnDB();

    String sqlStmt = "insert into credit values (?,?,?,?)";
    PreparedStatement myPreparedStatement = null;
    myPreparedStatement = conn.prepareStatement(sqlStmt);
    myPreparedStatement.setInt(1, credit.getCr_number()); //(coluna, variable)
    myPreparedStatement.setInt(2, credit.getT_number());
    myPreparedStatement.setFloat(3, credit.getCr_limite());
    myPreparedStatement.setFloat(4, credit.getCr_balance());
    
    myPreparedStatement.executeUpdate(); //insert, delete, update
    conn.commit();
    conn.close();
}

public static void Delete(Credit credit) throws SQLException{
	
	Connection conn = ConnectionDB.ConnDB();
	String sqlStmt = "delete from credit where cr_number = " + credit.getCr_number();
	PreparedStatement myPreparedStatement = null;
    myPreparedStatement = conn.prepareStatement(sqlStmt);  
    myPreparedStatement.executeUpdate(); 
    conn.commit();
    conn.close();
}

public static Credit Search(Credit credit) throws SQLException{

	
	Connection conn = ConnectionDB.ConnDB();
    Credit cre = new Credit();
	String sqlQuery;
	sqlQuery = "select * from credit where cr_number = " + credit.getCr_number();
	Statement myStatement = null;
    ResultSet myResultSet = null;
    myStatement = conn.createStatement();
    myResultSet = myStatement.executeQuery(sqlQuery);
    
    while(myResultSet.next())
    {
    	cre.setCr_number(myResultSet.getInt(1));
    	cre.setT_number(myResultSet.getInt(2));
    	cre.setCr_limite(myResultSet.getFloat(3));
    	cre.setCr_balance(myResultSet.getFloat(4));
    	System.out.println("\nCredit Number:" + cre.getCr_number() 
     			+ " Transaction Number:" + cre.getT_number()+ " Limite:" + 
    			cre.getCr_limite()+"Balance"+cre.getCr_balance());
    }
    
    conn.close();
    return cre;
	
}

public static void Update(Credit cre) throws SQLException{

Connection conn = ConnectionDB.ConnDB();
String sqlStmt = "update credit " + "Set cr_number = " + cre.getCr_number()+ "," + "    t_number = '" +cre.getT_number()+ ","
+"    cr_limite = '" +cre.getCr_limite()+ "," +"    cr_balance = '" +cre.getCr_balance()+ "'" + "where ch_number= "  + cre.getCr_number();
PreparedStatement myPreparedStatement = null;
myPreparedStatement = conn.prepareStatement(sqlStmt);  
myPreparedStatement.executeUpdate(); 
conn.commit();
conn.close();
}


}
