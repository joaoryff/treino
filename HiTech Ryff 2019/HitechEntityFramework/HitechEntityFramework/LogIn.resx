<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VAAAAABJRU5ErkJggg==
</value>
  </data>
</root>